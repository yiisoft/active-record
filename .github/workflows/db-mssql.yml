on:
  pull_request:
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/db-mssql.yml'
      - 'composer.json'
      - 'phpunit.xml.dist'

  push:
    branches: ['master']
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/db-mssql.yml'
      - 'composer.json'
      - 'phpunit.xml.dist'

name: db-mssql

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: PHP ${{ matrix.php }}

    env:
      COMPOSER_ROOT_VERSION: dev-master
      extensions: pdo, pdo_sqlsrv
      key: cache-v1

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php:
          - 8.1
          - 8.2
          - 8.3
          - 8.4

    services:
      mssql:
          image: mcr.microsoft.com/mssql/server:2022-latest
          env:
              SA_PASSWORD: YourStrong!Passw0rd
              ACCEPT_EULA: Y
              MSSQL_PID: Developer
          ports:
              - 1433:1433
          options: --name=mssql --health-cmd="/opt/mssql-tools18/bin/sqlcmd -C -S localhost -U SA -P 'YourStrong!Passw0rd' -Q 'SELECT 1'" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Install ODBC driver.
        run: |
          sudo curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18

      - name: Checkout.
        uses: actions/checkout@v4

      - name: Create MS SQL Database.
        run: docker exec -i mssql /opt/mssql-tools18/bin/sqlcmd -C -S localhost -U SA -P 'YourStrong!Passw0rd' -Q 'CREATE DATABASE yiitest'

      - name: Install PHP with extensions.
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          ini-values: date.timezone='UTC'
          coverage: pcov

      - name: Update composer.
        run: composer self-update

      - name: Install db and db-mssql.
        uses: yiisoft/actions/install-packages@master
        with:
          packages: >-
            ['db', 'db-mssql']

      - name: Run tests with phpunit.
        run: vendor/bin/phpunit --testsuite=Mssql --coverage-clover=coverage.xml --colors=always --display-warnings --display-deprecations

      - name: Upload coverage to Codecov.
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
